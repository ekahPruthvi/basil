#!/bash/bin

# Reset
clear='\033[0m'       # Text Reset

# Regular Colors
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White

# Bold
BBlack='\033[1;30m'       # Black
BRed='\033[1;31m'         # Red
BGreen='\033[1;32m'       # Green
BYellow='\033[1;33m'      # Yellow
BBlue='\033[1;34m'        # Blue
BPurple='\033[1;35m'      # Purple
BCyan='\033[1;36m'        # Cyan
BWhite='\033[1;37m'       # White

# Underline
UBlack='\033[4;30m'       # Black
URed='\033[4;31m'         # Red
UGreen='\033[4;32m'       # Green
UYellow='\033[4;33m'      # Yellow
UBlue='\033[4;34m'        # Blue
UPurple='\033[4;35m'      # Purple
UCyan='\033[4;36m'        # Cyan
UWhite='\033[4;37m'       # White

# Background
On_Black='\033[40m'       # Black
On_Red='\033[41m'         # Red
On_Green='\033[42m'       # Green
On_Yellow='\033[43m'      # Yellow
On_Blue='\033[44m'        # Blue
On_Purple='\033[45m'      # Purple
On_Cyan='\033[46m'        # Cyan
On_White='\033[7m'        # White

# High Intensity
IBlack='\033[0;90m'       # Black
IRed='\033[0;91m'         # Red
IGreen='\033[0;92m'       # Green
IYellow='\033[0;93m'      # Yellow
IBlue='\033[0;94m'        # Blue
IPurple='\033[0;95m'      # Purple
ICyan='\033[0;96m'        # Cyan
IWhite='\033[0;97m'       # White

# Bold High Intensity
BIBlack='\033[1;90m'      # Black
BIRed='\033[1;91m'        # Red
BIGreen='\033[1;92m'      # Green
BIYellow='\033[1;93m'     # Yellow
BIBlue='\033[1;94m'       # Blue
BIPurple='\033[1;95m'     # Purple
BICyan='\033[1;96m'       # Cyan
BIWhite='\033[1;97m'      # White

# High Intensity backgrounds
On_IBlack='\033[0;100m'   # Black
On_IRed='\033[0;101m'     # Red
On_IGreen='\033[0;102m'   # Green
On_IYellow='\033[0;103m'  # Yellow
On_IBlue='\033[0;104m'    # Blue
On_IPurple='\033[0;105m'  # Purple
On_ICyan='\033[0;106m'    # Cyan
On_IWhite='\033[0;107m'   # White

# Default Variables 
bg="$On_White"
ul="$UWhite"

# This is the header
Head_text() {
    local htext="$1"
    local hwidth=$(tput cols)
    local hpadding=$(( (hwidth - ${#htext}) / 2 ))
    local hendpad=$((( (hwidth - ${#htext}) / 2 )-1))
    printf "$On_White %${hpadding}s%s%${hendpad}s\n$clear" "" "$htext"
}

# This is the footer
Foot(){
    local COL=$(tput cols)
    local ROW=$(tput lines)
    tput cup $(( ROW - 1 ))
    local ftext="$(date) "
    local fwidth=$(tput cols)
    local fpadding=$(( (fwidth - ${#ftext})-1))
    printf "$On_White %${fpadding}s%s$clear" "" "$ftext"
}

# Display the text in center
Center_text() {
    local ctext="$1"
    local cwidth=$(tput cols)
    local cpadding=$(( (cwidth - ${#ctext}) / 2 ))
    printf "%${cpadding}s%s \n" "" "$ctext"
}

# Animation and clear screen
Line_sweep(){
    sleep 0.01
    [[ $LINES ]] || LINES=$(tput lines)
    [[ $COLUMNS ]] || COLUMNS=$(tput cols)
    tput civis
    for (( i=0; i<$LINES; i++ ))
    do
    clear
    if [ $i -gt 0 ]
    then
    n=$(($i-1))
    eval printf "$'\n%.0s'" {0..$n}
    fi
    eval printf %.1s '$((RANDOM & 1))'{1..$COLUMNS}
    sleep 0.01
    done
    clear
    tput cnorm
}

# This is a form, and it is customizable changing colors and the underline
# To edit teh colors, pls chnage the 

Form(){
    local lineno="$#"
    local max=0
    for i in "$@"
    do      
        local temp="$i"
        local wc=${#temp}
        if [ "$wc" -gt "$max" ]
        then
            max="$wc"
        fi
    done
    max=$(($max+5))
    local fwidth=$(tput cols)
    local fpadding=$(( (fwidth - ${max}) / 2 ))
    local fendpad=$((( (fwidth - ${max}) / 2 )-1))
    local finstartpadd=2
    local finendpadd=2
    local cont=0
    echo ""
    for i in "$@"
    do
        local end="║"
        if [ "$cont" -eq 0 ]
        then
            end="╗"
        fi
        cont=$(($cont+1))
        temp="$i"
        wc=${#temp}
        finendpadd=$(( ($max-$wc)-5 ))
        printf "%${fpadding}s$bg$ul %${finstartpadd}s %s%${finendpadd}s$clear" "" "$temp"
        echo "$end"
        local fline="╚"
        if [ "$cont" -eq "$lineno" ]
        then 
            printf "%${fpadding}s"
            for f in $(seq 1 "$((max - 2 ))" )
            do
                if [ "$f" -eq "$(( max - 2 ))" ]
                then
                    fline="╝"
                fi
                printf "$fline"
                fline="═"
            done
        fi
    done
}

Fillaform(){
    local lineno="$#"
    local max=0
    for i in "$@"
    do      
        local temp="$i"
        local wc=${#temp}
        if [ "$wc" -gt "$max" ]
        then
            max="$wc"
        fi
    done
    max=$(($max+5))
    local fwidth=$(tput cols)
    local fpadding=$(( (fwidth - ${max}) / 2 ))
    local fendpad=$((( (fwidth - ${max}) / 2 )-1))
    local cont=0
    echo ""
    echo ""
    for i in "$@"
    do
        local finstartpadd=2
        local finendpadd=2
        temp="$i"
        local end="║"
        if [ "$cont" -eq 0 ]
        then
            end="╗"
            
        fi
        cont=$(($cont+1))
        wc=${#temp}
        finendpadd=$(( ($max-$wc)-5 ))
        printf "%${fpadding}s$BIWhite %${finstartpadd}s %s%${finendpadd}s$clear" "" "$temp"
        echo "$end"
        local fline="╚"
        if [ "$cont" -eq "$lineno" ]
        then 
            printf "%${fpadding}s"
            for f in $(seq 1 "$((max - 2 ))" )
            do
                if [ "$f" -eq "$(( max - 2 ))" ]
                then
                    fline="╝"
                fi
                printf "$fline"
                fline="═"
            done
        fi
    done
    printf "\n %${fpadding}s"
}

Linspace(){
    local lines="$1"
    for line in $(seq 0 "$1")
    do
        echo ""
    done
}